version: 2 # use CircleCI 2.0
jobs: # a collection of steps
  build: # runs not using Workflows must have a `build` job as entry point
    environment:
      RACK_ENV: test
      RAILS_ENV: test
      TEST_REPORT_PATH: "circleci-test/reports"
    docker: # run the steps with Docker
      - image: circleci/ruby:2.5.0-node-browsers # ...with this image as the primary container; this is where all `steps` will run
        environment: # environment variables for primary container
          BUNDLE_JOBS: 3
          BUNDLE_RETRY: 3
          BUNDLE_PATH: vendor/bundle
          PGHOST: 127.0.0.1
          PGUSER: postgres
          RAILS_ENV: test
      - image: circleci/postgres:9.5-alpine # database image
        environment: # environment variables for database
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
    steps: # a collection of executable commands
      - checkout # special step to check out source code to working directory

      # Which version of bundler?
      - run:
          name: Which bundler?
          command: bundle -v

      # Restore bundle cache
      # Read about caching dependencies: https://circleci.com/docs/2.0/caching/
      - restore_cache:
          keys:
            - rails-demo-bundle-v2-{{ checksum "Gemfile.lock" }}
            - rails-demo-bundle-v2-

      - run: # Install Ruby dependencies
          name: Bundle Install
          command: bundle check || bundle install

      # Store bundle cache for Ruby dependencies
      - save_cache:
          key: rails-demo-bundle-v2-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle
      
      # Create required dirs
      - run:
          name: Create required dirs
          command: mkdir -p $TEST_REPORT_PATH

      # Save artifacts
      - type: store_test_results
        path: circleci-test/reports

      - run:
          name: Wait for DB
          command: dockerize -wait tcp://localhost:5432 -timeout 10s

      # Database setup
      - run: bundle exec rake db:create --all
      - run: bin/rails db:schema:load
      - run: bin/rails db:migrate

      # Run Rspecs
      - run: CI=true CODECOV_FLAGS="controllersFlag,modelsFlag,helpersFlag,jobsFlag" bundle exec rspec spec

      # - run: CI=true CODECOV_FLAG="controllers_flag" bundle exec rspec spec/controllers
      # - run: CI=true CODECOV_FLAG="models_flag" bundle exec rspec spec/models
      # - run: CI=true CODECOV_FLAG="helpers_flag" bundle exec rspec spec/helpers
      # - run: CI=true CODECOV_FLAG="jobs_flag" bundle exec rspec spec/jobs

#   deploy:
#     machine:
#         enabled: true
#     working_directory: ~/circleci-demo-workflows
#     environment:
#       HEROKU_APP: "sleepy-refuge-55486"
#     steps:
#       - checkout
#       - run:
#           name: Deploy Master to Heroku
#           command: |
#             git push https://heroku:$HEROKU_API_KEY@git.heroku.com/$HEROKU_APP.git master

# workflows:
#   version: 2
#   build-and-deploy:
#     jobs:
#       - build
#       - deploy:
#           requires:
#             - build
#           filters:
#             branches:
#               only: sequential-branch-filter
