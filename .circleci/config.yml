version: 2
jobs:
  build-job:
    environment:
      RACK_ENV: test
      RAILS_ENV: test
      TEST_REPORT_PATH: "circleci-test/reports"
    working_directory: ~/circleci-spi
    docker:
      - image: circleci/ruby:2.5.1-node-browsers
      - image: circleci/postgres:9.4.18-alpine-postgis
    steps:
      - checkout

      # Which version of bundler?
      - run:
          name: Which bundler?
          command: bundle -v

      # Restore bundle cache
      - type: cache-restore
        name: Restore bundle cache
        key: myapp-bundle-{{ checksum "Gemfile.lock" }}


      # Install gem dependencies
      - run:
          name: Install gem dependencies
          command: bundle check --path=vendor/bundle || bundle install --path=vendor/bundle

      # Store bundle cache
      - type: cache-save
        name: Store bundle cache
        key: myapp-bundle-{{ checksum "Gemfile.lock" }}
        paths:
          - vendor/bundle

      # Create required dirs
      - run:
          name: Create required dirs
          command: mkdir -p $TEST_REPORT_PATH

      # Save artifacts
      - type: store_test_results
        path: circleci-test/reports

      - run:
          name: Wait for DB
          command: dockerize -wait tcp://localhost:5432 -timeout 1m

      # Database setup
      - run: bin/rails db:create
      - run: bin/rails db:schema:load
      - run: bin/rails db:migrate

      # Run Rspecs
      - run: CI=true bundle exec rspec spec --format progress --format RspecJunitFormatter -o $TEST_REPORT_PATH/rspec.xml
  
workflows:
  version: 2
  build-deploy:
    jobs:
      - build-job
